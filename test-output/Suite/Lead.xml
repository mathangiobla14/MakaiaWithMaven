<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="HP-PC" ignored="13" name="Lead" tests="3" failures="1" timestamp="23 Jun 2018 07:14:15 GMT" time="153.442" errors="0">
  <testcase name="createLead" time="30.016" classname="tests.CreateLead">
    <failure type="org.testng.internal.thread.ThreadTimeoutException" message="Method tests.CreateLead.createLead() didn&amp;apos;t finish within the time-out 30000">
      <![CDATA[org.testng.internal.thread.ThreadTimeoutException: Method tests.CreateLead.createLead() didn't finish within the time-out 30000
at java.net.SocketInputStream.socketRead0(Native Method)
at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
at java.net.SocketInputStream.read(SocketInputStream.java:171)
at java.net.SocketInputStream.read(SocketInputStream.java:141)
at okio.Okio$2.read(Okio.java:139)
at okio.AsyncTimeout$2.read(AsyncTimeout.java:237)
at okio.RealBufferedSource.indexOf(RealBufferedSource.java:345)
at okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:217)
at okhttp3.internal.http1.Http1Codec.readHeaderLine(Http1Codec.java:212)
at okhttp3.internal.http1.Http1Codec.readResponseHeaders(Http1Codec.java:189)
at okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.java:88)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:45)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:125)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)
at okhttp3.RealCall.execute(RealCall.java:77)
at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:105)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:155)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:276)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:83)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.openqa.selenium.support.events.EventFiringWebDriver$EventFiringWebElement.lambda$new$0(EventFiringWebDriver.java:371)
at org.openqa.selenium.support.events.EventFiringWebDriver$EventFiringWebElement$$Lambda$214/1426085682.invoke(Unknown Source)
at com.sun.proxy.$Proxy14.click(Unknown Source)
at org.openqa.selenium.support.events.EventFiringWebDriver$EventFiringWebElement.click(EventFiringWebDriver.java:383)
at lib.selenium.WebDriverServiceImpl.click(WebDriverServiceImpl.java:65)
at tests.CreateLead.createLead(CreateLead.java:24)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:40)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- createLead -->
  <testcase name="edit" time="0.0" classname="tests.EditLead">
    <skipped/>
  </testcase> <!-- edit -->
  <testcase name="main" time="55.546" classname="tests.DeleteLead"/>
  <testcase name="@AfterSuite afterSuite" time="0.0" classname="lib.selenium.PreAndPost">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase name="@AfterSuite afterSuite" time="0.0" classname="lib.selenium.PreAndPost">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase name="@AfterSuite afterSuite" time="0.0" classname="lib.selenium.PreAndPost">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase name="@BeforeTest beforeTest" time="0.0" classname="lib.selenium.PreAndPost">
    <ignored/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase name="@BeforeTest beforeTest" time="0.0" classname="lib.selenium.PreAndPost">
    <ignored/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase name="@BeforeTest beforeTest" time="0.0" classname="lib.selenium.PreAndPost">
    <ignored/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase name="main" time="0.0" classname="tests.MergeLead">
    <ignored/>
  </testcase> <!-- main -->
  <testcase name="@AfterTest afterTest" time="0.0" classname="lib.selenium.PreAndPost">
    <ignored/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase name="@AfterTest afterTest" time="0.0" classname="lib.selenium.PreAndPost">
    <ignored/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase name="@AfterTest afterTest" time="0.0" classname="lib.selenium.PreAndPost">
    <ignored/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase name="@BeforeSuite beforeSuite" time="0.0" classname="lib.selenium.PreAndPost">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase name="@BeforeSuite beforeSuite" time="0.0" classname="lib.selenium.PreAndPost">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase name="@BeforeSuite beforeSuite" time="0.0" classname="lib.selenium.PreAndPost">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
</testsuite> <!-- Lead -->
